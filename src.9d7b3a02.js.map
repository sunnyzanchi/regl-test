{"version":3,"sources":["fragment.frag","vertex.vert","index.js"],"names":["module","exports","regl","draw","frag","vert","attributes","position","uniforms","frame","prop","mouse","depth","enable","count","document","addEventListener","e","clientX","clientY","tick","clear","color"],"mappings":";AAAAA,OAAOC,QAAQ;;ACAfD,OAAOC,QAAQ;;;;;;ACiCf,aAhCA,IAAA,EAAA,EAAA,QAAA,oBACA,EAAA,EAAA,QAAA,kBAEA,EAAA,EAAA,QAAA,SA6BA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA3BA,IAAMC,GAAO,EAAb,EAAA,WAEMC,EAAOD,EAAK,CAChBE,KAAAA,EADgB,QAEhBC,KAAAA,EAFgB,QAGhBC,WAAY,CACVC,SAAU,CAAC,EAAE,GAAI,GAAI,CAAC,EAAG,GAAI,CAAC,GAAI,GAAI,CAAC,EAAG,KAE5CC,SAAU,CACRC,MAAOP,EAAKQ,KAAK,SACjBC,MAAOT,EAAKQ,KAAK,UAEnBE,MAAO,CACLC,QAAQ,GAEVC,MAAO,IAILL,EAAQ,EACRE,EAAQ,CAAC,EAAG,GAEhBI,SAASC,iBAAiB,YAAa,SAAAC,GAErCN,EAAQ,CAACM,EAAEC,QAAsB,KAAZD,EAAEE,WAGzBjB,EAAKO,MAAM,SAAc,GAAXW,EAAAA,KACZlB,EAAKmB,MAAM,CAAEC,MAAO,CAAC,EAAG,EAAG,EAAG,KAE9BnB,EAAK,CAAEM,MAAAA,EAAOE,MAAAA,IACdF,GAAS","file":"src.9d7b3a02.js","sourceRoot":"../src","sourcesContent":["module.exports=\"precision mediump float;\\n#define GLSLIFY 1\\n\\nfloat rand(vec2 co) {\\n  return fract(\\n    sin(\\n      dot(co.xy, vec2(12.9898, 78.233)\\n          )\\n        )\\n      * 43758.5453\\n      );\\n}\\n\\nuniform vec2 mouse;\\nuniform float frame;\\nvarying vec2 pixel;\\n\\nvoid main() {\\n  float x = gl_FragCoord.x;\\n  float y = gl_FragCoord.y;\\n\\n  float mx = mouse.x;\\n  float my = mouse.y;\\n\\n  float col = (\\n    1.0 / pow(sqrt(pow(mx - x, 2.0) + pow(my - y, 2.0)), .38)\\n  ) - rand(vec2(x, y) + frame / 240.0) / 10.0;\\n\\n  float darker = col - 0.045;\\n\\n  gl_FragColor = vec4(darker, darker, col, 1.0);\\n}\";","module.exports=\"precision mediump float;\\n#define GLSLIFY 1\\nattribute vec2 position;\\n\\nvoid main() {\\n  gl_Position = vec4(position, 0, 0);\\n}\";","// TODO: Take advantage of GLSLify to use a better noise algorithm\nimport frag from './fragment.frag'\nimport vert from './vertex.vert'\n\nimport createRegl from 'regl'\n\nconst regl = createRegl()\n\nconst draw = regl({\n  frag,\n  vert,\n  attributes: {\n    position: [[-1, -1], [0, 1], [1, -1], [1, 0]]\n  },\n  uniforms: {\n    frame: regl.prop('frame'),\n    mouse: regl.prop('mouse')\n  },\n  depth: {\n    enable: false\n  },\n  count: 4\n})\n\n// TODO: Use regl's state - context, i think?\nlet frame = 0\nlet mouse = [0, 0]\n\ndocument.addEventListener('mousemove', e => {\n  // TODO: Get this dynamically from canvas height\n  mouse = [e.clientX, -e.clientY + 1300]\n})\n\nregl.frame(({ tick }) => {\n  regl.clear({ color: [0, 0, 0, 1] })\n\n  draw({ frame, mouse })\n  frame += 1\n})\n"]}